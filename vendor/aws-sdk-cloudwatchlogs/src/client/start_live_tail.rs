// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`StartLiveTail`](crate::operation::start_live_tail::builders::StartLiveTailFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`log_group_identifiers(impl Into<String>)`](crate::operation::start_live_tail::builders::StartLiveTailFluentBuilder::log_group_identifiers) / [`set_log_group_identifiers(Option<Vec::<String>>)`](crate::operation::start_live_tail::builders::StartLiveTailFluentBuilder::set_log_group_identifiers):<br>required: **true**<br><p>An array where each item in the array is a log group to include in the Live Tail session.</p> <p>Specify each log group by its ARN.</p> <p>If you specify an ARN, the ARN can't end with an asterisk (*).</p><note>  <p>You can include up to 10 log groups.</p> </note><br>
    ///   - [`log_stream_names(impl Into<String>)`](crate::operation::start_live_tail::builders::StartLiveTailFluentBuilder::log_stream_names) / [`set_log_stream_names(Option<Vec::<String>>)`](crate::operation::start_live_tail::builders::StartLiveTailFluentBuilder::set_log_stream_names):<br>required: **false**<br><p>If you specify this parameter, then only log events in the log streams that you specify here are included in the Live Tail session.</p> <p>If you specify this field, you can't also specify the <code>logStreamNamePrefixes</code> field.</p><note>  <p>You can specify this parameter only if you specify only one log group in <code>logGroupIdentifiers</code>.</p> </note><br>
    ///   - [`log_stream_name_prefixes(impl Into<String>)`](crate::operation::start_live_tail::builders::StartLiveTailFluentBuilder::log_stream_name_prefixes) / [`set_log_stream_name_prefixes(Option<Vec::<String>>)`](crate::operation::start_live_tail::builders::StartLiveTailFluentBuilder::set_log_stream_name_prefixes):<br>required: **false**<br><p>If you specify this parameter, then only log events in the log streams that have names that start with the prefixes that you specify here are included in the Live Tail session.</p> <p>If you specify this field, you can't also specify the <code>logStreamNames</code> field.</p><note>  <p>You can specify this parameter only if you specify only one log group in <code>logGroupIdentifiers</code>.</p> </note><br>
    ///   - [`log_event_filter_pattern(impl Into<String>)`](crate::operation::start_live_tail::builders::StartLiveTailFluentBuilder::log_event_filter_pattern) / [`set_log_event_filter_pattern(Option<String>)`](crate::operation::start_live_tail::builders::StartLiveTailFluentBuilder::set_log_event_filter_pattern):<br>required: **false**<br><p>An optional pattern to use to filter the results to include only log events that match the pattern. For example, a filter pattern of <code>error 404</code> causes only log events that include both <code>error</code> and <code>404</code> to be included in the Live Tail stream.</p> <p>Regular expression filter patterns are supported.</p> <p>For more information about filter pattern syntax, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/FilterAndPatternSyntax.html">Filter and Pattern Syntax</a>.</p><br>
    /// - On success, responds with [`StartLiveTailOutput`](crate::operation::start_live_tail::StartLiveTailOutput) with field(s):
    ///   - [`response_stream(EventReceiver<StartLiveTailResponseStream, StartLiveTailResponseStreamError>)`](crate::operation::start_live_tail::StartLiveTailOutput::response_stream): <p>An object that includes the stream returned by your request. It can include both log events and exceptions.</p>
    /// - On failure, responds with [`SdkError<StartLiveTailError>`](crate::operation::start_live_tail::StartLiveTailError)
    pub fn start_live_tail(&self) -> crate::operation::start_live_tail::builders::StartLiveTailFluentBuilder {
        crate::operation::start_live_tail::builders::StartLiveTailFluentBuilder::new(self.handle.clone())
    }
}
